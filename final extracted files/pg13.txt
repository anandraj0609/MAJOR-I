Chapter 1 - A Tutorial Introduction
  
The while gets a character, assigns it to c, and then tests whether the character was the end-of-file signal. 
If it was not, the body of the while is executed, printing the character. 
The while then repeats. 
When the end of the input is finally reached, the while terminates and so does main. 
This version centralizes the input - there is now only one reference to getchar - and shrinks the program. 
The resulting program is more compact, and, once the idiom is mastered, easier to read.
You'll see this style often. (It's possible to get carried away and create impenetrable code, however, a tendency that we will try to curb.) 
The parentheses around the assignment, within the condition are necessary. 
The precedence of != is higher than that of =, which means that in the absence of parentheses the relational test != would be done before the assignment =. 
So the statement is equivalent to This has the undesired effect of setting c to 0 or 1, depending on whether or not the call of getchar returned end of file. (More on this in Chapter 2.) 
Exercsise 1-6. Verify that the expression getchar() != EOF is 0 or 1. 
Exercise 1-7. Write a program to print the value of EOF. 
1.5.2 Character Counting
The next program counts characters; it is similar to the copy program.    
#include <stdio.h>
