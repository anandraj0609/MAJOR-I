Chapter 1 - A Tutorial Introduction
Exercise 1-13. Write a program to print a histogram of the lengths of words in its input. 
It is easy to draw the histogram with the bars horizontal; a vertical orientation is more challenging. 
Exercise 1-14. Write a program to print a histogram of the frequencies of different characters in its input. 
1.7 Functions
In C, a function is equivalent to a subroutine or function in Fortran, or a procedure or function in Pascal. 
A function provides a convenient way to encapsulate some computation, which can then be used without worrying about its implementation.
With properly designed functions, it is possible to ignore how a job is done; knowing what is done is sufficient. 
C makes the sue of functions easy, convinient and efficient; you will often see a short function defined and called only once, just because it clarifies some piece of code. 
So far we have used only functions like printf, getchar and putchar that have been provided for us; now it's time to write a few of our own. 
Since C has no exponentiation operator like the ** of Fortran, let us illustrate the mechanics of function definition by writing a function power(m,n) to raise an integer m to a positive integer power n. 
That is, the value of power(2,5) is 32. 
This function is not a practical exponentiation routine, since it 
handles only positive powers of small integers, but it's good enough for illustration.(The standard library contains a function pow(x,y) that computes xy.) 
Here is the function power and a main program to exercise it, so you can see the whole structure at once. 
