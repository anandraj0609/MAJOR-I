Chapter 1 - A Tutorial Introduction
the two integers fahr of the values causes and , them between a tab -LRB- \ t -RRB- with printed be to celsius .
printf of the first argument in Each % construction the corresponding second argument , third argument , etc. with paired is ; they properly number and type by match up must , or you wrong answers get will .
the way By , printf the C language of part not is ; there C itself in defined no input or output is .
printf just functions of the standard library that normally C programs to accessible are from a useful function is .
printf of The behavior the ANSI standard in , however defined is , so its properties any compiler and library with the same be that the standard to conforms should .
In order C on itself concentrate to , we input and output about much chapter 7 until talk n't do .
particular In , we formatted input then until defer will .
If you input numbers to have , Section 7.4 in the function scanf of the discussion read .
scanf that it output writing instead of input reads except , printf like is .
There the temperature conversion program with problems of a couple are .
The simpler one is that the output because the numbers right-justified not are very pretty n't is .
a width , printed the numbers with the printf statement in That 's easy fix ; if we augment each to % d their fields in right-justified be will .
instance For , we say might
printf -LRB- '' % 3d % 6d \ n '' , fahr , celsius -RRB- ;
a field three digits wide in each line , and the second a field in six digits wide , this like : of the first number print to
0 -17
20 -6 40 4 60 15 80 26 100 37 ...
The more serious problem is that because we integer arithmetic used have , the Celsius temperatures very accurate not are ; instance for , 0 oF actually -17.8 oC , not -17 about is .
more accurate answers get To , we integer instead of floating-point arithmetic use should .
This the program in some changes requires .
Here is the second version :
